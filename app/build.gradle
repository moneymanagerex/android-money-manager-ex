/*
 * Copyright (C) 2012-2016 The Android Money Manager Ex Project Team
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'
apply plugin: 'io.fabric'
apply plugin: 'com.neenbedankt.android-apt'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    defaultConfig {
        applicationId "com.money.manager.ex"
        versionCode 945
        versionName getVersionAsDate() + "." + versionCode

//        minSdkVersion rootProject.ext.minSdkVersion
//        targetSdkVersion rootProject.ext.targetSdkVersion
        minSdkVersion 15 // 4.0.3
        targetSdkVersion 24

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
//        main {
//            manifest.srcFile 'src/main/AndroidManifest.xml'
//            //java.srcDirs = ['src']
//            java.srcDirs = ['src/main/java']
//            resources.srcDirs = ['src/main/java']
//            aidl.srcDirs = ['src/main/java']
//            renderscript.srcDirs = ['src/main/java']
//            //res.srcDirs = ['res']
//            res.srcDirs = ['src/main/res']
//            assets.srcDirs = ['assets']
//            //jniLibs.srcDirs = ['libs']
//        }
//        // Unit tests
//        robolectric {
//            java.srcDir file('src/test/java/')
//            resources.srcDir file('src/test/resources')
//        }
//        // UI Tests
//        androidTest {
//            java.srcDirs = ['src/androidTest/java']
//        }

        // Move the tests to tests/java, tests/res, etc...
        //instrumentTest.setRoot('tests')

        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

    buildTypes {
        debug {
            applicationIdSuffix ".debug"
            
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            // Disable fabric build id for debug builds
            ext.enableCrashlytics = false;
        }
        beta {
            applicationIdSuffix ".beta"
            versionNameSuffix "-beta"

            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
        }
        release {
            minifyEnabled false
            shrinkResources false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'

            applicationVariants.all { variant ->
                variant.outputs.each { output ->
                    // append the version to the file name.
                    //def version = "-" + defaultConfig.versionName.replace(".", "-")
                    def version = "-" + defaultConfig.versionName
                    // + "_r" + defaultConfig.versionCode
                    def fileName = output.outputFile.name.replace("app-", "ammx-")
                            .replace(".apk", version + ".apk")
                    output.outputFile = new File(output.outputFile.parent, fileName)
                }
            }
        }
    }

    dataBinding {
        enabled = true
    }

    productFlavors {
//        beta {
//            applicationId "com.money.manager.ex.beta"
//            versionName "latestBeta"
//        }
//        stable {
//            applicationId "com.money.manager.ex"
//        }
    }

    lintOptions {
        // stop the gradle build if errors are found - affects XML resources (strings, etc.).
        abortOnError true
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }

    signingConfigs {
        debug {
//            storeFile file("debug.keystore")
            v2SigningEnabled false;
        }
        release {
            keyAlias 'ammex'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true;
    }
}

dependencies {
//    compile(name:'cloudrail-si-debug', ext:'aar')
    compile(
            fileTree(dir: 'libs', include: ['*.jar'])
            , project(':MMEX Icon Font')
            , project(':androidSVG_12')      // androidSVG
            , project(path: ':money')
            , 'com.cloudrail:cloudrail-si-android:2.8.2'
            , 'com.google.android.apps.dashclock:dashclock-api:2.0.0'
            , supportDependencies.support
            , supportDependencies.appCompat
            , supportDependencies.recyclerView
            , supportDependencies.cardView
            , supportDependencies.design
            , supportDependencies.preference
            , supportDependencies.supportAnnotation
            , supportDependencies.gridLayout
            , 'com.opencsv:opencsv:3.8'
            , 'net.objecthunter:exp4j:0.4.7'
            , 'com.github.gabrielemariotti.changeloglib:changelog:2.1.0'
            , 'commons-io:commons-io:2.5'
            , 'com.afollestad.material-dialogs:core:0.8.6.1'
//            , 'com.afollestad.material-dialogs:core:0.9.0.2'
//            , 'com.afollestad.material-dialogs:commons:0.9.0.2'
            , 'com.melnykov:floatingactionbutton:1.3.0'
            , 'com.github.pedrovgs:lynx:1.6'
            , 'com.astuetz:pagerslidingtabstrip:1.0.1'
            , 'de.hdodenhof:circleimageview:2.1.0'
            , 'me.relex:circleindicator:1.2.2'  // Page indicator on tutorial. https://android-arsenal.com/details/1/1268
            , 'com.code-troopers.betterpickers:library:3.0.1'
            , 'com.github.PhilJay:MPAndroidChart:v2.2.5'
            // JavaMoney
//            , 'javax.money:money-api-bp:1.0.1'
//            , 'org.javamoney:moneta-bp:1.1'
            //    compile 'com.github.mikvor:money-conversion:1.0-SNAPSHOT'
            , 'com.google.code.gson:gson:2.7'
            , 'com.squareup.retrofit2:retrofit:2.1.0'            // Retrofit
            , 'com.squareup.retrofit2:converter-gson:2.1.0'
            , 'com.squareup.retrofit2:converter-scalars:2.1.0'
            , 'com.squareup.retrofit2:adapter-rxjava:2.1.0'
//            ,'net.zetetic:android-database-sqlcipher:3.4.0'   // database encryption
            , 'org.greenrobot:eventbus:3.0.0'
//            , 'net.danlew:android.joda:2.9.4.2'
            , 'io.github.luizgrp.sectionedrecyclerviewadapter:sectionedrecyclerviewadapter:1.0.4'
            , 'org.jsoup:jsoup:1.10.1'               // HTML parsing.
            , 'com.google.guava:guava:19.0'         // collection libraries
            , 'com.android.support:multidex:1.0.1'  // multidex support
            , 'com.nononsenseapps:filepicker:3.1.0' // file picker
            , 'io.reactivex:rxandroid:1.2.1'        // RxJava
            , 'io.reactivex:rxjava:1.2.2'
//            , 'io.reactivex.rxjava2:rxjava:2.0.0-RC1'
            , 'com.squareup.sqlbrite:sqlbrite:0.8.0'
            , 'com.jakewharton.timber:timber:4.3.1'
            , 'com.jakewharton.rxbinding:rxbinding:0.4.0'    // RxBinding
//            ,'com.jakewharton.rxbinding:rxbinding-support-v4:0.4.0'
//            ,'com.jakewharton.rxbinding:rxbinding-appcompat-v7:0.4.0'
//            ,'com.jakewharton.rxbinding:rxbinding-design:0.4.0'
//            ,'com.jakewharton.rxbinding:rxbinding-recyclerview-v7:0.4.0'
//            ,'com.jakewharton.rxbinding:rxbinding-leanback-v17:0.4.0'
            , 'com.trello:rxlifecycle:1.0'         // RxLifecycle
            , 'com.shamanland:fonticon:0.1.9'
            , 'com.mikepenz:iconics-core:2.8.1@aar' // also update in the icon module.
            , 'com.mikepenz:google-material-typeface:2.2.0.3.original@aar' // MD icons
            , 'com.roomorama:caldroid:3.0.1'
            , 'com.squareup.picasso:picasso:2.5.2'
//            , 'org.apache.commons:commons-collections4:4.1' // to handle build errors
    )
    compile('com.crashlytics.sdk.android:crashlytics:2.6.5@aar') {
        transitive = true;
    }
    compile('com.mikepenz:aboutlibraries:5.8.5@aar') {
        transitive = true
    }
    // Parceler
    compile 'org.parceler:parceler-api:1.1.6'
    apt 'org.parceler:parceler:1.1.5'
    // Dagger 2
    compile 'com.google.dagger:dagger:2.7'
    apt 'com.google.dagger:dagger-compiler:2.7'
    // ButterKnife
    compile 'com.jakewharton:butterknife:8.4.0'
    apt 'com.jakewharton:butterknife-compiler:8.4.0'
    // IcePick
    compile 'frankiesardo:icepick:3.2.0'
    provided 'frankiesardo:icepick-processor:3.2.0'

    testCompile(
            'commons-io:commons-io:2.5',
            'junit:junit:4.12',
            'org.robolectric:robolectric:3.1.4',
            'org.robolectric:shadows-support-v4:3.1.4',
            'org.robolectric:shadows-multidex:3.1.4',
            'org.robolectric:shadows-httpclient:3.1.4',
            'com.squareup.assertj:assertj-android:1.1.1',
            // Matchers
            'org.hamcrest:hamcrest-core:1.3',
            'org.hamcrest:hamcrest-library:1.3',
            'org.hamcrest:hamcrest-integration:1.3'
            // async handling
//        'com.jayway.awaitility:awaitility:1.6.4',
            // mock/stub
//        "org.mockito:mockito-core:1.+"
            , 'io.selendroid:selendroid-client:0.17.0'
    )
    testCompile('io.selendroid:selendroid-standalone:0.17.0') {
        exclude group: 'io.selendroid', module: 'selendroid-server'
        exclude group: 'io.selendroid', module: 'android-driver-app'
    }

    // UI testing
    androidTestCompile(
            'com.android.support.test:runner:0.5',
            // Set this dependency to use JUnit 4 rules
            'com.android.support.test:rules:0.5',
            // Set this dependency to build and run Espresso tests
            'com.android.support.test.espresso:espresso-core:2.2.2',
            'com.android.support.test.espresso:espresso-contrib:2.2.2',
            // add this for intent mocking support
            // 'com.android.support.test.espresso:espresso-intents:2.2.2'
            // add this for webview testing support
            // 'com.android.support.test.espresso:espresso-web:2.2.2'
            // Matchers
            'org.hamcrest:hamcrest-core:1.3',
            'org.hamcrest:hamcrest-library:1.3',
            'com.squareup.assertj:assertj-android:1.1.1',
            // Robotium, UI testing
            'com.jayway.android.robotium:robotium-solo:5.6.3'
            // JBehave
//        'org.jbehave:jbehave-core:4.0.4'
    )
    //    // Set this dependency to build and run UI Automator tests
    //    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.1'
}

configurations {
    androidTestCompile.exclude group: 'com.android.support', module: 'support-v4'
}

def getVersionAsDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy.MM.dd')
    return formattedDate
}
