/*
 * Copyright (C) 2012-2019 The Android Money Manager Ex Project Team
 *
 * This program is free software; you can redistribute it and/or
 * modify it under the terms of the GNU General Public License
 * as published by the Free Software Foundation; either version 3
 * of the License, or (at your option) any later version.
 *
 * This program is distributed in the hope that it will be useful,
 * but WITHOUT ANY WARRANTY; without even the implied warranty of
 * MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
 * GNU General Public License for more details.
 *
 * You should have received a copy of the GNU General Public License
 * along with this program.  If not, see <http://www.gnu.org/licenses/>.
 */

apply plugin: 'com.android.application'

android {
    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    defaultConfig {
        applicationId "com.money.manager.ex"
        versionCode 996
        //versionName getVersionAsDate() + "." + versionCode
        versionName "2019.02.24.1"
        // $applicationId
        setProperty("archivesBaseName", "ammx-$versionName")

        // minSdkVersion rootProject.ext.minSdkVersion
        // targetSdkVersion rootProject.ext.targetSdkVersion
        minSdkVersion 19 // Android 4.4
        targetSdkVersion 28

        multiDexEnabled true
        vectorDrawables.useSupportLibrary = true
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
    }

    sourceSets {
        // Move the build types to build-types/<type>
        // For instance, build-types/debug/java, build-types/debug/AndroidManifest.xml, ...
        // This moves them out of them default location under src/<type>/... which would
        // conflict with src/ being used by the main source set.
        // Adding new build types or product flavors should be accompanied
        // by a similar customization.
        debug.setRoot('build-types/debug')
        release.setRoot('build-types/release')
    }

//    buildTypes {
//        debug {
//            applicationIdSuffix ".debug"
//
//            minifyEnabled false
//            shrinkResources false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//        }
//        beta {
//            applicationIdSuffix ".beta"
//            versionNameSuffix "-beta"
//
//            minifyEnabled false
//            shrinkResources false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//
//            versionNameSuffix "-beta"
//        }
//        release {
//            minifyEnabled false
//            shrinkResources false
//            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
//
//            versionNameSuffix "-release"
//        }
//    }

    dataBinding {
        enabled = true
    }

    productFlavors {
        // beta {
        //     applicationId "com.money.manager.ex.beta"
        //     versionName "latestBeta"
        // }
        // stable {
        //     applicationId "com.money.manager.ex"
        // }
    }

    lintOptions {
        // stop the gradle build if errors are found - affects XML resources (strings, etc.).
        abortOnError false
    }

    packagingOptions {
        exclude 'META-INF/LICENSE.txt'
        exclude 'META-INF/LICENSE'
        exclude 'META-INF/NOTICE'
        exclude 'META-INF/NOTICE.txt'
        exclude 'META-INF/DEPENDENCIES'
    }

    signingConfigs {
        debug {
            // storeFile file("debug.keystore")
            v2SigningEnabled false
        }
        release {
            keyAlias 'ammex'
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
//        unitTests.all {
//            systemProperty 'robolectric.offline', 'true'
//        }
        // http://robolectric.org/getting-started/
        unitTests {
            includeAndroidResources = true
        }
    }
}

dependencies {
    // api ...
    implementation project(':MMEX_Icon_Font')
    implementation project(':androidSVG')
    implementation project(path: ':money')

    implementation(
            fileTree(dir: 'libs', include: ['*.jar'])
            , 'com.opencsv:opencsv:4.1'
            , 'net.objecthunter:exp4j:0.4.8'
            , 'com.github.gabrielemariotti.changeloglib:changelog:2.1.0'
            , 'com.afollestad.material-dialogs:core:0.8.6.1'
            // , 'com.afollestad.material-dialogs:core:0.9.0.2'
            // , 'com.afollestad.material-dialogs:commons:0.9.0.2'
            , 'com.melnykov:floatingactionbutton:1.3.0'
            , 'com.github.pedrovgs:lynx:1.6'
            , 'de.hdodenhof:circleimageview:2.2.0'
            , 'me.relex:circleindicator:1.2.2'  // Page indicator on tutorial. https://android-arsenal.com/details/1/1268
            , 'com.code-troopers.betterpickers:library:3.1.0'
            , 'com.github.PhilJay:MPAndroidChart:v2.2.5'
            // JavaMoney
            // , 'javax.money:money-api-bp:1.0.1'
            , 'org.javamoney:moneta-bp:1.1'
            , 'com.google.code.gson:gson:2.8.2'
            // ,'net.zetetic:android-database-sqlcipher:3.4.0'   // database encryption
            , 'org.greenrobot:eventbus:3.0.0'
            , 'io.github.luizgrp.sectionedrecyclerviewadapter:sectionedrecyclerviewadapter:1.2.0'
            , 'org.jsoup:jsoup:1.11.2'              // HTML parsing.
            , 'androidx.multidex:multidex:2.0.0'  // multidex support
            , 'com.nononsenseapps:filepicker:3.1.0' // file picker
            , 'io.reactivex:rxandroid:1.2.1'        // RxJava
            // , 'io.reactivex.rxjava2:rxandroid:2.0.1'
            , 'io.reactivex:rxjava:1.3.3'
            // , 'io.reactivex.rxjava2:rxjava:2.0.1'
            , 'com.squareup.sqlbrite:sqlbrite:1.1.2' // use SqlDelight
            , 'com.jakewharton.timber:timber:4.6.1'
            , 'com.jakewharton.rxbinding:rxbinding:1.0.1'    // RxBinding
            // ,'com.jakewharton.rxbinding:rxbinding-support-v4:0.4.0'
            // ,'com.jakewharton.rxbinding:rxbinding-appcompat-v7:0.4.0'
            // ,'com.jakewharton.rxbinding:rxbinding-design:0.4.0'
            // ,'com.jakewharton.rxbinding:rxbinding-recyclerview-v7:0.4.0'
            // ,'com.jakewharton.rxbinding:rxbinding-leanback-v17:0.4.0'
            , 'com.trello:rxlifecycle:1.0'         // RxLifecycle
            , 'com.shamanland:fonticon:0.1.9'
            , 'com.mikepenz:iconics-core:3.0.3@aar' // also update in the icon module.
            , 'com.mikepenz:iconics-views:3.0.3@aar'
            , 'com.mikepenz:google-material-typeface:3.0.1.2.original@aar' // MD icons
            , 'com.mikepenz:fontawesome-typeface:4.7.0.2@aar'
            , 'com.roomorama:caldroid:3.0.1'
            , 'com.squareup.picasso:picasso:2.5.2'
            // , 'org.apache.commons:commons-collections4:4.1' // to handle build errors
            , 'com.evernote:android-job:1.2.5'
    )
    implementation supportDependencies.core
    implementation supportDependencies.support
    implementation supportDependencies.appCompat
    implementation supportDependencies.recyclerView
    implementation supportDependencies.cardView
    implementation supportDependencies.design
    implementation supportDependencies.preference
    implementation supportDependencies.supportAnnotation
    implementation supportDependencies.gridLayout
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'            // Retrofit
    implementation 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.squareup.retrofit2:converter-scalars:2.4.0'
    implementation 'com.squareup.retrofit2:adapter-rxjava:2.4.0'
    implementation 'com.google.android.material:material:1.0.0'
    api 'com.google.guava:guava:27.0.1-android' // collection libraries

    implementation('com.mikepenz:aboutlibraries:5.9.7@aar') {
        transitive = true
    }
    // Parceler
    implementation 'org.parceler:parceler-api:1.1.12'
    annotationProcessor 'org.parceler:parceler:1.1.12'
    // Dagger 2
    implementation 'com.google.dagger:dagger:2.13'
    annotationProcessor 'com.google.dagger:dagger-compiler:2.13'
    // ButterKnife
    implementation 'com.jakewharton:butterknife:10.0.0'
    annotationProcessor 'com.jakewharton:butterknife-compiler:10.0.0'
    // IcePick
    implementation 'frankiesardo:icepick:3.2.0'
    annotationProcessor 'frankiesardo:icepick-processor:3.2.0'

    testImplementation(
            // Robolectric
            'junit:junit:4.12',
            'org.assertj:assertj-core:3.9.1',
            'org.robolectric:robolectric:3.8',
            'org.robolectric:shadows-support-v4:3.3.2',
            'org.robolectric:shadows-multidex:3.8',
            'org.robolectric:shadows-httpclient:3.8',
            //'com.squareup.assertj:assertj-android:1.1.1',
            // Matchers
            'org.hamcrest:hamcrest-core:1.3',
            'org.hamcrest:hamcrest-library:1.3',
            'org.hamcrest:hamcrest-integration:1.3'
            // async handling
            // 'com.jayway.awaitility:awaitility:1.6.4',
            // mock/stub
            // "org.mockito:mockito-core:1.+"
            , 'io.selendroid:selendroid-client:0.17.0'
    )
    testImplementation('io.selendroid:selendroid-standalone:0.17.0') {
        exclude group: 'io.selendroid', module: 'selendroid-server'
        exclude group: 'io.selendroid', module: 'android-driver-app'
    }

    // UI testing
    androidTestImplementation(
            'androidx.test:runner:1.1.0-alpha4',
            // Set this dependency to use JUnit 4 rules
            'androidx.test:rules:1.1.0-alpha4',
            // Set this dependency to build and run Espresso tests
            'androidx.test.espresso:espresso-core:3.1.0-alpha4',
            'androidx.test.espresso:espresso-contrib:3.1.0-alpha4',
            // add this for intent mocking support
            // 'com.android.support.test.espresso:espresso-intents:2.2.2'
            // add this for webview testing support
            // 'com.android.support.test.espresso:espresso-web:2.2.2'
            // Matchers
            'org.hamcrest:hamcrest-core:1.3',
            'org.hamcrest:hamcrest-library:1.3',
            'com.squareup.assertj:assertj-android:1.2.0',
            'org.assertj:assertj-core:3.9.1',
            // Robotium, UI testing
            'com.jayway.android.robotium:robotium-solo:5.6.3'
            // JBehave
            // 'org.jbehave:jbehave-core:4.0.4'
    )
    // Set this dependency to build and run UI Automator tests
    //    androidTestCompile 'com.android.support.test.uiautomator:uiautomator-v18:2.1.1'
}

configurations {
    androidTestCompile.exclude group: 'com.android.support', module: 'support-v4'
}

static def getVersionAsDate() {
    def date = new Date()
    def formattedDate = date.format('yyyy.MM.dd')
    return formattedDate
}
